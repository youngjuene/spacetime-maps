version: '3.8'

services:
  # Frontend development server
  frontend-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    ports:
      - "5173:5173"
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
    environment:
      - NODE_ENV=development
    command: npm run dev
    profiles:
      - dev

  # Frontend production
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    ports:
      - "80:80"
    environment:
      - NODE_ENV=production
    restart: unless-stopped
    profiles:
      - prod

  # Backend (optional - for data generation)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - GMAPS_API_KEY=${GMAPS_API_KEY}
      - PYTHONPATH=/app
    volumes:
      - ./backend:/app
      - backend_cache:/app/cache
    profiles:
      - backend
      - full

  # Nginx reverse proxy (for full stack)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend
    profiles:
      - full

volumes:
  backend_cache:

networks:
  default:
    name: spacetime-maps 